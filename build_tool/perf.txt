内存：
  1. cat /proc/meminfo   #查看当前内存的总体情况
  2. free     #察看内存剩余情况
  3. sar -r 2 3  #察看当日内存占用情况每2s统计1次，共统计3次
  4. pmap 39906         #查看进程39906内存使用情况

CPU:
  1: top                 #整体查看各进程的CPU占用情况
  2: vmstat 2 3          #察看cpu使用率，每2s统计1次，共统计3次 关注 cs us sy id wa st 几项
  3: sar -u 2 3     #察看cpu使用率，每2s统计1次，共统计3次  
  4：  while :; do ps -eo pid,ni,pri,pcpu,psr,comm |grep java; sleep 1; done   #查看java进程cpu占用情况  


监控：
  1: top
  2: vmstat
  3: sar



网络： 

  1: sar -n DEV  2 3  #支持如下各种选择 每2s统计1次，共统计3次
                DEV     Network interfaces               #察看网络流量
                EDEV    Network interfaces (errors)
                NFS     NFS client
                NFSD    NFS server
                SOCK    Sockets (v4)                     #察看网络sock连接
                IP      IP traffic      (v4)
                EIP     IP traffic      (v4) (errors)
                ICMP    ICMP traffic    (v4)
                EICMP   ICMP traffic    (v4) (errors)
                TCP     TCP traffic     (v4)
                ETCP    TCP traffic     (v4) (errors)
                UDP     UDP traffic     (v4)
                SOCK6   Sockets (v6)
                IP6     IP traffic      (v6)
                EIP6    IP traffic      (v6) (errors)
                ICMP6   ICMP traffic    (v6)
                EICMP6  ICMP traffic    (v6) (errors)
                UDP6    UDP traffic     (v6)


IO:
  1: df -ha   #查看磁盘占用情况
  2: du -sh
  3: iostat -x 1 5   #iostat -x -d   磁盘IO流量实时统计
  4：sar -b 2 3  #察看当日IO使用情况每2s统计1次，共统计3次
  
  
进程或线程：
  1：ps -eLf | grep java |wc -l  #显示java的线程数
  2：pmap 39906         #查看进程39906内存使用情况

系统调用：
  1：strace


########################### 查看系统活动信息 ################################################################
sar - Collect, report, or save system activity information.

通过 sar -h 查看可看的信息项
通过 man sar 可查看各信息项返回结果的含义



########################### 内存查看 ################################################################
1、查看内存使用情况：
free -m
             total       used       free     shared    buffers     cached
Mem:          3949       2519       1430          0        189       1619
-/+ buffers/cache:        710       3239
Swap:         3576          0       3576

total：内存总数
used：已经使用的内存数
free：空闲内存数
shared：多个进程共享的内存总额
- buffers/cache：(已用)的内存数，即used-buffers-cached
+ buffers/cache：(可用)的内存数，即free+buffers+cached

Buffer Cache用于针对磁盘块的读写；Page Cache用于针对文件inode的读写，这些Cache能有效地缩短I/O系统调用的时间。

对于操作系统来说free/used是系统可用/占用的内存；
而对于应用程序来说-/+ buffers/cache是可用/占用内存,
因为buffers/cache很快就会被使用。我们工作时候应该从应用角度来看。

########################### 性能监控 虚拟内存 vmstat ################################################################
vmstat工具的使用是通过两个数字参数来完成的，第一个参数是采样的时间间隔数，单位是秒，第二个参数是采样的次数，

通过 man vmstat 可查看各信息项返回结果的含义

# vmstat 2 10

r 表示运行队列(就是说多少个进程真的分配到CPU)，我测试的服务器目前CPU比较空闲，没什么程序在跑，当这个值超过了CPU数目，就会出现CPU瓶颈了。这个也和top的负载有关系，一般负载超过了3就比较高，超过了5就高，超过了10就不正常了，服务器的状态很危险。top的负载类似每秒的运行队列。如果运行队列过大，表示你的CPU很繁忙，一般会造成CPU使用率很高。

b 表示阻塞的进程,这个不多说，进程阻塞，大家懂的。

swpd 虚拟内存已使用的大小，如果大于0，表示你的机器物理内存不足了，如果不是程序内存泄露的原因，那么你该升级内存了或者把耗内存的任务迁移到其他机器。

free   空闲的物理内存的大小，我的机器内存总共8G，剩余3415M。

buff   Linux/Unix系统是用来存储，目录里面有什么内容，权限等的缓存，我本机大概占用300多M

cache cache直接用来记忆我们打开的文件,给文件做缓冲，我本机大概占用300多M(这里是Linux/Unix的聪明之处，把空闲的物理内存的一部分拿来做文件和目录的缓存，是为了提高 程序执行的性能，当程序使用内存时，buffer/cached会很快地被使用。)

si  每秒从磁盘读入虚拟内存的大小，如果这个值大于0，表示物理内存不够用或者内存泄露了，要查找耗内存进程解决掉。我的机器内存充裕，一切正常。

so  每秒虚拟内存写入磁盘的大小，如果这个值大于0，同上。

bi  块设备每秒接收的块数量，这里的块设备是指系统上所有的磁盘和其他块设备，默认块大小是1024byte，我本机上没什么IO操作，所以一直是0，但是我曾在处理拷贝大量数据(2-3T)的机器上看过可以达到140000/s，磁盘写入速度差不多140M每秒

bo 块设备每秒发送的块数量，例如我们读取文件，bo就要大于0。bi和bo一般都要接近0，不然就是IO过于频繁，需要调整。

in 每秒CPU的中断次数，包括时间中断

cs 每秒上下文切换次数，例如我们调用系统函数，就要进行上下文切换，线程的切换，也要进程上下文切换，这个值要越小越好，太大了，要考虑调低线程或者进程的数目,例如在apache和nginx这种web服务器中，我们一般做性能测试时会进行几千并发甚至几万并发的测试，选择web服务器的进程可以由进程或者线程的峰值一直下调，压测，直到cs到一个比较小的值，这个进程和线程数就是比较合适的值了。系统调用也是，每次调用系统函数，我们的代码就会进入内核空间，导致上下文切换，这个是很耗资源，也要尽量避免频繁调用系统函数。上下文切换次数过多表示你的CPU大部分浪费在上下文切换，导致CPU干正经事的时间少了，CPU没有充分利用，是不可取的。

us 用户CPU时间，我曾经在一个做加密解密很频繁的服务器上，可以看到us接近100,r运行队列达到80(机器在做压力测试，性能表现不佳)。

sy 系统CPU时间，如果太高，表示系统调用时间长，例如是IO操作频繁。

id  空闲 CPU时间，一般来说，id + us + sy = 100,一般我认为id是空闲CPU使用率，us是用户CPU使用率，sy是系统CPU使用率。

wt 等待IO CPU时间。





################# 硬盘查看 ##########################################################################
1、查看硬盘及分区信息：
fdisk -l

2、查看文件系统的磁盘空间占用情况：
df -h

3、查看硬盘的I/O性能（每隔一秒显示一次，显示5次）：
iostat -x 1 5
iostat是含在套装systat中的,可以用yum -y install systat来安装。
常关注的参数：
如果%util接近100%,说明产生的I/O请求太多，I/O系统已经满负荷，该磁盘可能存在瓶颈。
如果idle小于70%，I/O的压力就比较大了，说明读取进程中有较多的wait。


############################################ 查看平均负载 ####################################
有时候系统响应很慢，但又找不到原因，这时就要查看平均负载了，看它是否有大量的进程在排队等待。
最简单的命令：
uptime
查看过去的1分钟、5分钟和15分钟内进程队列中的平均进程数量。
还有动态命令：
top
我们只关心以下部分：
top - 21:33:09 up  1:00,  1 user,  load average: 0.00, 0.01, 0.05
如果每个逻辑cpu当前的活动进程不大于3，则系统性能良好；
如果每个逻辑cpu当前的活动进程不大于4，表示可以接受；
如果每个逻辑cpu当前的活动进程大于5，则系统性能问题严重。
一般计算方法：负载值/逻辑cpu个数

还可以结合vmstat命令来判断系统是否繁忙，其中：
procs
r：等待运行的进程数。
b：处在非中断睡眠状态的进程数。
w：被交换出去的可运行的进程数。
memeory
swpd：虚拟内存使用情况，单位为KB。
free：空闲的内存，单位为KB。
buff：被用来作为缓存的内存数，单位为KB。
swap
si：从磁盘交换到内存的交换页数量，单位为KB。
so：从内存交换到磁盘的交换页数量，单位为KB。
io
bi：发送到块设备的块数，单位为KB。
bo：从块设备接受的块数，单位为KB。
system
in：每秒的中断数，包括时钟中断。
cs：每秒的环境切换次数。
cpu
按cpu的总使用百分比来显示。
us：cpu使用时间。
sy：cpu系统使用时间。
id：闲置时间。
标准情况下r和b的值应该为：
r<5,b=0
假设输出的信息中：
如果r经常大于3或4，且id经常少于50，表示cpu的负荷过重。
pi、po长期不等于0，表示内存不足。
bi经常不等于0，且在b中的队列大于2或3，表示io的性能不好。

